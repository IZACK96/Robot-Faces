{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","figure","id","name","email","CardList","figures","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredFigures","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAGaA,EAAO,SAACC,GAAD,OAEhB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAK,OACVC,IAAG,+BAA4BH,EAAMI,OAAOC,GAAzC,4BAEH,6BAAKL,EAAMI,OAAOE,OAClB,4BAAIN,EAAMI,OAAOG,YCPZC,EAAW,SAAAR,GAGpB,OACA,qBAAKC,UAAU,YAAf,SACQD,EAAMS,QAAQC,KAAI,SAAAN,GAAM,OAAI,cAAC,EAAD,CAAsBA,OAASA,GAApBA,EAAOC,UCL7CM,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOZ,UAAU,SACjBa,KAAM,SACNF,YAAcA,EACdG,SAAUF,MCuCCG,E,kDAvCb,aAAc,IAAD,8BACX,gBAYFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAZrC,EAAKC,MAAQ,CACXb,QAAQ,GACRU,YAAa,IAJJ,E,qDAOb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,QAAUkB,S,oBAO1C,WAAS,IAAD,EACyBC,KAAKN,MAA7Bb,EADD,EACCA,QAASU,EADV,EACUA,YACVU,EAAiBpB,EAAQqB,QAAO,SAAA1B,GAAM,OAC1CA,EAAOE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGjD,OAEE,sBAAK9B,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CACAW,YAAa,SACbC,aAAce,KAAKf,eAEnB,cAAC,EAAD,CAAUJ,QAASoB,W,GAhCTI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9e7490f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props)=>(\r\n\r\n    <div className = 'card-container'>\r\n        <img alt ='face' \r\n        src = {`https://robohash.org/${props.figure.id}?set=set1&size=180x180`}/>\r\n\r\n        <h2>{props.figure.name}</h2>\r\n        <p>{props.figure.email}</p>\r\n    </div>\r\n);\r\n\r\n","import './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = props => {\r\n\r\n    \r\n    return(\r\n    <div className='card-list'>{\r\n            props.figures.map(figure => <Card key={figure.id} figure= {figure} />\r\n                )\r\n          }\r\n\r\n    </div>);\r\n};","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input className='search' \r\n    type ='search' \r\n    placeholder ={placeholder} \r\n    onChange={handleChange}\r\n    />\r\n)","import {CardList} from './components/card-list/card-list.component';\nimport './App.css';\nimport {Component} from 'react'; \nimport {SearchBox} from './components/search-box/search-box.component';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      figures:[],\n      searchField: '',\n    };\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({figures : users}));\n\n  }\n  handleChange = e =>{\n    this.setState({searchField: e.target.value})\n    \n  };\n  render(){\n    const {figures, searchField} = this.state;\n    const filteredFigures= figures.filter(figure => \n      figure.name.toLowerCase().includes(searchField.toLowerCase()) \n      );\n\n    return (\n      \n      <div className=\"App\">\n        <h1> Robot Finder </h1>\n        <SearchBox\n        placeholder ='Search'\n        handleChange={this.handleChange}\n        />\n        <CardList figures={filteredFigures}/>\n        \n      </div>\n    )\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}